name: Build ACBR
on: 
  workflow_dispatch:
    inputs:
      addDateToAlphas:
        description: 'Add date to alpha versions'     
        required: true
        default: true
      addDateToAll:
        description: 'Add date to any version'     
        required: true
        default: false
permissions:
  contents: write
  
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04,windows-latest]    
    runs-on: ${{ matrix.os }}
    steps:
      - name: CHECKOUT
        uses: actions/checkout@v4
        with:
          repository: binarynonsense/comic-book-reader
          
      - name: SETUP NODE
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          
      - name: INSTALL PACKAGES
        run: npm ci 
        
      - name: SET NAME AND VERSION
        shell: bash
        run: |        
          APP_VERSION=$(jq -r .version package.json)
          BUILD_DATE=$(date '+%Y%m%d-%H%M%S')
          IS_ALPHA=false
          if echo "$APP_VERSION" | grep 'alpha'; then
            IS_ALPHA=true
          fi
          ADDTOALL=${{github.event.inputs.addDateToAll }}
          ADDTOALPHAS=${{github.event.inputs.addDateToAlphas }}
          ADD_DATE=false
          if [ "$IS_ALPHA" == true ] &&  [ "$ADDTOALPHAS" == true ]; then
            ADD_DATE=true
          fi
          if [ "$ADDTOALL" == true ]; then
            ADD_DATE=true
          fi
          if [ "$ADD_DATE" == true ]; then
            NEW_APP_VERSION="${APP_VERSION}-${BUILD_DATE}"
            jq --arg variable "${NEW_APP_VERSION}" '.version = $variable' package.json > package.json.tmp
            mv package.json.tmp package.json
          else
            NEW_APP_VERSION="${APP_VERSION}"
          fi
          echo $NEW_APP_VERSION
          if [ "$OS" == "windows-latest" ]; then
            echo "RELEASE_NAME=$NEW_APP_VERSION" >> $env:GITHUB_ENV   
          else
            echo "RELEASE_NAME=$NEW_APP_VERSION" >> $GITHUB_ENV   
          fi
          
      - name: RUN DIST (LINUX)
        if: matrix.os == 'ubuntu-22.04'
        run: npm run dist:linux        
      - name: RUN DIST (WINDOWS)
        if: matrix.os == 'windows-latest'
        run: npm run dist:windows
        
      - name: LS DIST
        shell: bash
        run: ls ./dist  
        
      - name: PREPARE FILES (LINUX)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          mkdir ./dist/ACBR_Linux_AppImage
          mv ./dist/*.AppImage ./dist/ACBR_Linux_AppImage/
          cp -r licenses ./dist/ACBR_Linux_AppImage/licenses
          mv ./dist/VERSION ./dist/ACBR_Linux_AppImage/
          mv ./dist/ACBR.sh ./dist/ACBR_Linux_AppImage/ 
          mv ./dist/linux-unpacked ./dist/ACBR_Linux
          cp -r licenses ./dist/ACBR_Linux/licenses
          rm  ./dist/ACBR_Linux/LICENSE*
      - name: PREPARE FILES (WINDOWS)
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |      
          mv ./dist/win-unpacked ./dist/ACBR_Windows
          cp -r licenses ./dist/ACBR_Windows/licenses
          rm  ./dist/ACBR_Windows/LICENSE*
          
      - name: PREPARE ZIPS (LINUX)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          cd ./dist
          zip -r ./ACBR_Linux.zip ./ACBR_Linux
          zip -r ./ACBR_Linux_AppImage.zip ./ACBR_Linux_AppImage
      - name: PREPARE ZIPS (WINDOWS)
        if: matrix.os == 'windows-latest'
        run: |
          cd ./dist
          7z a ./ACBR_Windows.zip ./ACBR_Windows
          7z a -t7z -sfx -m0=lzma2 -mx=9 ACBR_Windows_SelfExtracting.exe ./ACBR_Windows
          
      - name: LS DIST
        shell: bash
        run: ls ./dist   
        
      - name: RELEASE (LINUX)
        if: matrix.os == 'ubuntu-22.04'
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          draft: true
          name: v${{env.RELEASE_NAME}} (linux)
          tag_name: v${{env.RELEASE_NAME}}-linux
          files: |
            ./dist/ACBR_Linux.zip
            ./dist/ACBR_Linux_AppImage.zip
      - name: RELEASE (WINDOWS)
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          draft: true
          name: v${{env.RELEASE_NAME}} (windows)
          tag_name: v${{env.RELEASE_NAME}}-windows
          files: |
            ./dist/ACBR_Windows.zip
            ./dist/ACBR_Windows_SelfExtracting.exe
